-------------------------------
-- HAN YI
-- AUTHOR: HIRSCHMILCH
-------------------------------

local target = {aa = nil, q = nil, botrk = nil}
local qReady, eReady, rReady = false, false, false, false
local last, windup, animation = 0, 3, 0.65
local enemyHeroes = {}

function ItemSlot(id)
    for i = 4, 9, 1 do
        if myHero:GetItem(i) and myHero:GetItem(i).id == id then
            return i
        end
    end
end

function CastItem(id, var1, var2)
    local slot = ItemSlot(id)
    if slot == nil then return end
    if (myHero:CanUseSpell(slot) == Game.SpellState.READY) then
        if (var2 ~= nil) then
            myHero:CastSpell(slot, var1, var2)
        elseif (var1 ~= nil) then
            myHero:CastSpell(slot, var1)
        else
            myHero:CastSpell(slot)
        end
    end
end

local selected = nil
function UpdateTargets()
	target.aa, target.q, target.botrk = nil, nil, nil
	if selected then
	    if Allclass.ValidTarget(selected) then
    	    local dist = myHero.pos:DistanceTo(selected.pos)
    	    if qReady and dist < 600 then
    	        target.q = selected
    	    end
    	    if dist < 450 then
    	        target.botrk = selected
    	    end
        	if dist < MyRange(selected) + 10 then
        		target.aa = selected
        	end
		else
			Game.Chat.Print('<font color=\'#FFFFFF\'>Master Yi: Target <font color=\'#FF0000\'><b>UNSELECTED</b></font>: '..selected.charName..'.</font>')
			selected = nil
		end
	end
	if not selected then
		if Menu.TS.Mode:Value() == 1 then
			local p, q, t = 0, 0, 0
			for i = 1, #enemyHeroes do
				local player = enemyHeroes[i]
				if Allclass.ValidTarget(player) then
	    			local dist = myHero.pos:DistanceTo(player.pos)
	        		local ratio = myHero.totalDamage / player.armor / player.health
	        		if qReady and dist < 600 and ratio > q then
	        			target.q, q = player, ratio
	        		end
	        		if dist < 450 and ratio > t then
	        			target.botrk, t = player, ratio
	        		end
	        		if dist <  MyRange(player) + 10 and ratio > p then
	        			target.aa, p = player, ratio
	        		end
	        	end
			end
		elseif Menu.TS.Mode:Value() == 2 then
			local p, q, t = 10000, 10000, 10000
			for i = 1, #enemyHeroes do
				local player = enemyHeroes[i]
				if Allclass.ValidTarget(player) then
	    			local dist = myHero.pos:DistanceTo(player.pos)
	        		local health = player.health
	        		if qReady and dist < 600 and health < q then
	        			target.q, q = player, health
	        		end
	        		if dist < 450 and health < t then
	        			target.botrk, t = player, health
	        		end
	        		if dist < MyRange(player) + 10 and health < p then
	        			target.aa, p = player, health
	        		end
	        	end
	        end
		end
	end
end

function OnWndMsg(msg, key)
	if msg == 514 and Menu.TS.Selected:Value() then
		local radius = 200
		local current = nil
		for i = 1, #enemyHeroes do
			local player = enemyHeroes[i]
			if Allclass.ValidTarget(player) and mousePos:DistanceTo(player.pos) <= radius then
				current = player
			end
		end
	    if selected and (not current or current.charName == selected.charName) then
		    Game.Chat.Print('<font color=\'#FFFFFF\'>Master Yi: Target <font color=\'#FF0000\'><b>UNSELECTED</b></font>: '..selected.charName..'.</font>')
		    selected = nil
	    elseif current and not selected then
		    selected = current
		    Game.Chat.Print('<font color=\'#FFFFFF\'>Master Yi: New target <font color=\'#00FF00\'><b>SELECTED</b></font>: '..selected.charName..'.</font>')
		end
	end
end

function Botrk()
	if target.botrk then
		CastItem(3153, target.botrk)
		CastItem(3144, target.botrk)
	end
end

function CastQ()
	if target.q and Menu.Combo.Q:Value() and myHero.pos:DistanceTo(target.q.pos) > Menu.Combo.QRange:Value() then
		myHero:CastSpell(0, target.q)
	end
end

function CastR()
	if Menu.Combo.R and rReady then
		local count = 0
		for i = 1, #enemyHeroes do
			local player = enemyHeroes[i]
			if myHero.pos:DistanceTo(player.pos) < Menu.Combo.RRange:Value() then
				count = count + 1
			end
		end
		if count >= Menu.Combo.RCount:Value() then
			myHero:CastSpell(3)
		end
	end
end

function OnProcessSpell(unit, spell)
	if unit.isMe then
    	if spell.name:lower():find('attack') or spell.name:lower():find('doublestrike') then
			windup = spell.windUpTime
			animation = spell.animationTime
			last = os.clock() - Game.Latency() / 2000
			OnAttack()
			Allclass.DelayAction(AfterAttack, windup * 1000 + 1)
		end
    end
end

function OnAttack()
    if Menu.Combo.Key:IsPressed() and target.aa then
    	if eReady and Menu.Combo.E:Value() then
    		myHero:CastSpell(2)
    	end
    	CastItem(3142)
    end
end

function AfterAttack()
	if Menu.Combo.Key:IsPressed() then
		if qReady and Menu.Combo.QAfter:Value() then
			myHero:CastSpell(0, target.q)
		end
		if target.aa then
			CastItem(3077)
			CastItem(3074)
		end	
	end
end

function MyRange(target)
	local myRange = myHero.range + 65
	if Allclass.ValidTarget(target) then
		myRange = myRange + target.boundingRadius
	end
	return myRange
end

function InRange(target)
	if myHero.pos:DistanceTo(target.pos) < MyRange(target) then
		return true
	end
	return false
end

function CanAttack() 
	if last <= os.clock() then
		return os.clock() + Game.Latency() / 2000 > last + animation
	end
	return false
end

function CanMove()
	if last <= os.clock() then
		return os.clock() + Game.Latency() / 2000 > last + windup + Menu.Orbwalker.Add:Value() / 1000
	end
	return false
end

function Magnet(target)
	return target and mousePos:DistanceTo(target.pos) < 125 and myHero.pos:DistanceTo(target.pos) < Menu.Orbwalker.MRange:Value()
end
  
function Orbwalk(target)
	if CanAttack() and Allclass.ValidTarget(target) and InRange(target) then
		myHero:Attack(target)
	elseif CanMove() then
		if Magnet(target) and Menu.Orbwalker.Magnet:Value() then
       		    myHero:Move(myHero.x, myHero.z)
		else
			local myVector = Geometry.Vector3(myHero.x, myHero.y, myHero.z)
			local mouseVector = Geometry.Vector3(mousePos.x, mousePos.y, mousePos.z)
			local movePoint = myVector + (mouseVector - myVector):Normalize() * 250
			myHero:Move(movePoint.x, movePoint.z)
		end
	end
end

function OnDraw()
  	if Menu.Draw.All:Value() and not myHero.dead then
  		if Menu.Draw.Q.On:Value() then
  		    local r = Menu.Draw.Q.R:Value()
  		    local b = Menu.Draw.Q.B:Value()
  		    local g = Menu.Draw.Q.G:Value()
  			Graphics.DrawCircle(myHero, 600, Graphics.ARGB(255, r, b, g))
  			Render.GameCircle(myHero.x, myHero.y, myHero.z, 1000, 0x312444)
  		end
  		if Menu.Draw.QB.On:Value() then
  		    local r = Menu.Draw.QB.R:Value()
  		    local b = Menu.Draw.QB.B:Value()
  		    local g = Menu.Draw.QB.G:Value()
  			Graphics.DrawCircle(myHero, Menu.Combo.QRange:Value(), Graphics.ARGB(255, r, b, g))
  	    end
  		if Menu.Draw.Target.On:Value() and selected then
  			local r = Menu.Draw.Target.R:Value()
  		    local b = Menu.Draw.Target.B:Value()
  		    local g = Menu.Draw.Target.G:Value()
  			Graphics.DrawCircle(selected, 150, Graphics.ARGB(255, r, b, g))
  		end
  	end
end

function Combo()
	if Menu.Combo.Key:IsPressed() then
		Orbwalk(target.aa)
		Botrk()
		CastQ()
		CastR()
	end
end

function OnTickCheck()
	qReady = myHero:CanUseSpell(0) == Game.SpellState.READY
  	eReady = myHero:CanUseSpell(2) == Game.SpellState.READY
  	rReady = myHero:CanUseSpell(3) == Game.SpellState.READY
  	UpdateTargets()
end

function OnTick()
    if myHero.dead then return end
    OnTickCheck()
	Combo()
end

Callback.Bind('Load', function()
	Callback.Bind('GameStart', function()
	    InitGame()
		Callback.Bind('Tick', OnTick)
		Callback.Bind('Draw', OnDraw)
		Callback.Bind('WndMsg', function(msg, key) OnWndMsg(msg, key) end)
		Callback.Bind('ProcessSpell', function(unit, spell) OnProcessSpell(unit, spell) end)
		Allclass.DelayAction(function()
	    		Game.Chat.Print('Han Yi Loaded')
		end, 2000)
	end)
end)

function InitGame()
	if myHero.charName ~= 'MasterYi' then
		return
	end
	for i = 1, Game.HeroCount() do
		local player = Game.Hero(i)
		if player.team ~= myHero.team then
			table.insert(enemyHeroes, player)
		end
	end
	Menu()
end

function Menu()
	Menu = MenuConfig('Han Yi')
	Menu:Icon('fa-empire')

	Menu:Menu('Combo', 'Main Settings')
	Menu.Combo:Icon('fa-gears')
	Menu.Combo:Section('Q', 'Q')
	Menu.Combo:Boolean('Q', 'Use Q', true)
	Menu.Combo:Slider('QRange', 'Min range to cast Q', 325, 0, 600)
	Menu.Combo:Boolean('QAfter', 'Use Q after Auto Attack', false)
	Menu.Combo:Section('E', 'E')
	Menu.Combo:Boolean('E', 'Use E', true)
	Menu.Combo:Section('R',' R')
	Menu.Combo:Boolean('R', 'Use R if x targets are in y range', true)
	Menu.Combo:Slider('RCount', 'x', 2, 0, 5 )
	Menu.Combo:Slider('RRange', 'y', 750, 0, 2000)
	Menu.Combo:Section('Binding', 'KOREA')
	Menu.Combo:KeyBinding('Key', 'Combo Key', 'SPACE')
	
	Menu:Menu('TS','Target Selector')
	Menu.TS:Icon('fa-bullseye')
	Menu.TS:DropDown('Mode', 'TS mode', 1, {'Less Cast', 'Lowest HP'})
	Menu.TS:Boolean('Selected', 'Focus left-clicked target', true)	

	Menu:Menu('Orbwalker', 'Orbwalker')
	Menu.Orbwalker:Icon('fa-joomla')
	Menu.Orbwalker:Slider('Add', 'Extra windup', 10, 0, 100)
	Menu.Orbwalker:Boolean('Magnet', 'Use magnet', true)
	Menu.Orbwalker:Slider('MRange', 'Magnet range', 75, 0, 150)
	
	Menu:Menu('Draw', 'Drawings')
	Menu.Draw:Icon('fa-magic')
	Menu.Draw:Boolean('All', 'Use Drawings', true)
	Menu.Draw:Menu('Q', 'Q')
	Menu.Draw.Q:Boolean('On', 'Draw Q', true)
	Menu.Draw.Q:Slider('R', 'red', 125, 0, 250)
	Menu.Draw.Q:Slider('B', 'blue', 50, 0, 250)
	Menu.Draw.Q:Slider('G', 'green', 0, 0, 250)
	Menu.Draw:Menu('QB', 'Q Buffer')
	Menu.Draw.QB:Boolean('On', 'Draw Q Buffer', true)
	Menu.Draw.QB:Slider('R', 'red', 125, 0, 250)
	Menu.Draw.QB:Slider('B', 'blue', 50, 0, 250)
	Menu.Draw.QB:Slider('G', 'green', 0, 0, 250)
	Menu.Draw:Menu('R', 'R')
	Menu.Draw:Menu('Target', 'Left-clicked Target')
	Menu.Draw.Target:Boolean('On', 'Draw Target', true)
	Menu.Draw.Target:Slider('R', 'red', 250, 0, 250)
	Menu.Draw.Target:Slider('B', 'blue', 0, 0, 250)
	Menu.Draw.Target:Slider('G', 'green', 0, 0, 250)
end  
